name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        # Clean npm cache
        npm cache clean --force
        
        # Install dependencies with legacy peer deps to avoid conflicts
        npm ci --legacy-peer-deps
        
        # Install Capacitor CLI globally
        npm install -g @capacitor/cli@5.7.2
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
      with:
        jdk-version: '17'
        
    - name: Set up Android environment
      run: |
        echo "org.gradle.java.home=$JAVA_HOME_17_X64" >> $GITHUB_ENV
        echo "org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8" >> $GITHUB_ENV
        
    - name: Configure Gradle
      run: |
        echo "android.useAndroidX=true" > local.properties
        echo "android.enableJetifier=true" >> local.properties
      
    - name: Build web app with production settings
      run: |
        # Ensure the dist directory is clean
        rm -rf dist/
        
        # Build the web app with production settings
        NODE_ENV=production npm run build
        
        # Verify the build output
        ls -la dist/
        
        # Ensure index.html exists and has correct base href
        if [ ! -f "dist/index.html" ]; then
          echo "‚ùå Error: index.html not found in dist/"
          exit 1
        fi
        
        # Update base href in index.html for production
        sed -i 's|<base href=".*">|<base href="./">|g' dist/index.html
      
    - name: Add Android platform if not exists
      run: |
        if [ ! -d "android" ]; then
          npx cap add android
        fi
      
    - name: Sync web assets with Android
      run: |
        # Remove existing web assets to prevent conflicts
        rm -rf android/app/src/main/assets/public/*
        
        # Copy the built web assets
        npx cap sync android
        
        # Verify the assets were copied
        ls -la android/app/src/main/assets/public/
        
    - name: Build debug APK
      working-directory: ./android
      run: |
        # Clean and build the APK with debug information
        ./gradlew clean
        ./gradlew assembleDebug --info --stacktrace
        
    - name: Verify APK contents
      run: |
        # List the APK files
        find android -name "*.apk" -exec ls -la {} \;
        
        # Check if the APK contains the web assets
        unzip -l android/app/build/outputs/apk/debug/app-debug.apk | grep -E 'assets/public/|assets/index.html'
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: android/app/build/outputs/apk/debug/app-debug.apk
        if-no-files-found: error
        retention-days: 1
        
    - name: Upload build logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          android/**/build/reports/**/*
          android/**/build/outputs/logs/**/*
        retention-days: 1
